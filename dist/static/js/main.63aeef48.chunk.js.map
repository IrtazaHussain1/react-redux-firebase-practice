{"version":3,"sources":["store/actions/authAction.js","components/layout/SigninLinks.js","components/layout/SignoutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["signIn","credentials","console","log","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","connect","signOut","props","className","to","onClick","profile","initials","SignoutLinks","state","firebase","links","uid","ProjectSummary","project","title","content","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","notify","user","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","authError","onSubmit","htmlFor","onChange","creds","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","responce","doc","set","createProject","authorid","add","authorId","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initSatae","authReducer","action","message","projectReducer","RootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","attachAuthIsReady","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.63aeef48.chunk.js","sourcesContent":["export const signIn = (credentials) => {\r\n    console.log(credentials);\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n          credentials.email,\r\n          credentials.password\r\n        ).then(() => {\r\n          dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n          dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    \r\n      }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        }); \r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password,\r\n    ).then( (responce) => {\r\n      return firestore.collection('users').doc(responce.user.uid).set({\r\n        firstName : newUser.firstName,\r\n        lastName : newUser.lastName,\r\n        initials:newUser.firstName[0] + newUser.lastName[0] \r\n      }).then(() => {\r\n        dispatch({type:'SIGNUP_SUCCESS'});\r\n      }). catch( err => {\r\n        dispatch({type:'SIGNUP_ERROR', err})\r\n      })\r\n    }).catch(err => {\r\n      dispatch({type:'SIGNUP_ERROR',err})\r\n    })\r\n  }\r\n}\r\n\r\nexport default signIn\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\n\r\nconst SigninLinks = (props) => {\r\n    return (\r\n        <div>\r\n          <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n    const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n          signOut: () => dispatch(signOut())\r\n        }\r\n      }\r\n      \r\n      export default connect(null, mapDispatchToProps)(SigninLinks)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignoutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\" >SignUp</NavLink></li>\r\n            <li><NavLink to=\"/signin\" >SignIn</NavLink></li>\r\n        </ul>  \r\n    )\r\n}\r\n\r\nexport default SignoutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SigninLinks from './SigninLinks'\r\nimport SignoutLinks from './SignoutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    // console.log('auth: ',auth)\r\n    const links = auth.uid ? <SigninLinks profile={profile} /> : <SignoutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>   \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n    \r\n    <div className='card z-depth-0 project-summary'>\r\n        <div className='card-content grey-text text-darken-3' >\r\n            <span className='card-title'>{project.title}</span>\r\n            <p>{project.content}</p>\r\n            <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className='project-list section'>\r\n            \r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/'+project.id} key={project.id}><ProjectSummary project={project} /></Link>\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className='section'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>Notifications</span>\r\n                    <ul className='notification'>\r\n                        {notifications && notifications.map(notify => {\r\n                            return <li key={notify.id}>\r\n                                <span className='pink-text'>{notify.user} </span>\r\n                                <span>{notify.content}</span>\r\n                                <div className='grey-text note-date'>\r\n                                    {moment(notify.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n      \r\n      // console.log(this.props);\r\n      const { projects, auth, notifications } = this.props;\r\n\r\n      if (!auth.uid) return <Redirect to='/signin' />\r\n      \r\n      return (\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList projects={projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    // console.log(state);  \r\n    return {\r\n      projects: state.firestore.ordered.projects,\r\n      auth: state.firebase.auth,\r\n      notifications:state.firestore.ordered.notifications,\r\n    }\r\n  }\r\n  \r\n  export default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      {collection:'projects', orderBy:['createdAt', 'desc']},\r\n      {collection:'notifications', limit: 3 ,orderBy:['time','desc']}\r\n    ])\r\n  )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst  ProjectDetails =  (props) => {\r\n    const { project,auth } = props\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project){\r\n        return (    \r\n        <div className='container section project-detail'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>{project.title}</span>\r\n                    <p>{ project.content }</p>\r\n                </div>\r\n                <div className='card-action grey lighten-4 grey=text'>\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n        <div className='container center'>\r\n            <p>Loading Project...</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state, ownProps) => {\r\n    const id =ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]:null\r\n    return {\r\n        project:project,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signIn(this.state)\r\n\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if (auth.uid) return <Redirect to='/' /> \r\n\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                     <h5 className='grey-text text-darken-3'>SignIn</h5>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='email'>Email</label>\r\n                         <input type='email' id='email' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='password'>Password</label>\r\n                         <input type='password' id='password' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <button className='btn pink lighten-1 z-depth-0'>SignIn</button>\r\n                     </div>\r\n                     <div className='red-text center'>\r\n                        { authError ? <p>{authError}</p>: null}\r\n                     </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    authError:state.auth.authError,\r\n    auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                     <h5 className='grey-text text-darken-3'>SignUp</h5>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='email'>Email</label>\r\n                         <input type='email' id='email' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='password'>Password</label>\r\n                         <input type='password' id='password' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='firstName'>First Name</label>\r\n                         <input type='text' id='firstName' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <label htmlFor='lastName'>Last Name</label>\r\n                         <input type='text' id='lastName' onChange={this.handleChange}/>\r\n                     </div>\r\n                     <div className='input-field'>\r\n                         <button className='btn pink lighten-1 z-depth-0'>SignUp</button>\r\n                     </div>\r\n                     <div className='red-text center'>\r\n                         {authError ? <p>{authError}</p>: null}\r\n                     </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError : state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp:(newUser) => dispatch(signUp(newUser))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","const createProject = (project) => {\r\n    return (dispatch, getState,{ getFirestore }) => {\r\n        // make async call to database\r\n        const firestore =  getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorid = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type:'CREATE_PROJECT',\r\n                project,\r\n            })\r\n        }).catch( (err) => {\r\n            dispatch({\r\n                type:'CREATE_PROJECT_ERROR',\r\n                err,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default createProject","import React, { Component } from 'react'\r\nimport createProject from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:'',\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state); \r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        else{\r\n        \r\n            return (\r\n                <div className='container'>\r\n                    <form onSubmit={this.handleSubmit} className='white'>\r\n                        <h5 className='grey-text text-darken-3'>Create New Project</h5><br/>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='email'>Title</label>\r\n                            <input type='text' id='title' onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <label htmlFor='content'>Project Content</label>\r\n                            <textarea className='materialize-textarea' id='content' onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <div className='input-field'>\r\n                            <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard}></Route>\n          <Route path='/project/:id' component={ProjectDetails}></Route>\n          <Route path='/signin' component={SignIn}></Route>\n          <Route path='/signup' component={SignUp}></Route>\n          <Route path='/create' component={CreateProject}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initSatae ={\r\n    authError:null,\r\n}\r\n\r\nconst authReducer = (state = initSatae,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log('Error login');\r\n            return {\r\n                ...state,\r\n                authError:'Login Failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signed Out successfully');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('SignUp Success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Error Signing up')\r\n            return {\r\n                ...state,\r\n                authError:action.err.message,\r\n            }\r\n        default:\r\n            // console.log('this is default');\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initSatae ={\r\n    projects:[\r\n        {id:1,title:'Test1',content:'Blah Blah Blah Blah'},\r\n        {id:2,title:'Test2',content:'Blah Blah Blah Blah'},\r\n        {id:3,title:'Test3',content:'Blah Blah Blah Blah'},\r\n        {id:4,title:'Test4',content:'Blah Blah Blah Blah'},\r\n        {id:5,title:'Test5',content:'Blah Blah Blah Blah'},\r\n\r\n    ]\r\n}\r\n\r\nconst projectReducer = ( state = initSatae , action ) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':{\r\n            console.log('Project Created', action.project);\r\n            return state;\r\n        }\r\n        case 'CREATE_PROJECT_ERROR':{\r\n            console.log('Project create error: '. action.err);\r\n            return state;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { irebaseReducer, firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst RootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer, \r\n    firebase:firebaseReducer, \r\n})\r\n\r\nexport default RootReducer","import firebase from 'firebase/app'\r\n\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAcb4IhbR7ej28YLe14i033NWu4-dABrsQ\",\r\n    authDomain: \"marioplan-c6c07.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-c6c07.firebaseio.com\",\r\n    projectId: \"marioplan-c6c07\",\r\n    storageBucket: \"marioplan-c6c07.appspot.com\",\r\n    messagingSenderId: \"398070425354\",\r\n    appId: \"1:398070425354:web:287ac4aba043be068c7cf3\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// importing redux material.\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport RootReducer from './store/reducer/rootReducer'\nimport thunk from 'redux-thunk'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\nimport 'firebase/firestore' // add this to use Firestore\n\nimport firebase from './config/fbConfig'\nimport fbConfig from './config/fbConfig'\n\n// binding layer \nimport { Provider, useSelector } from 'react-redux'\n// creating store\n\n    // react-redux-firebase config\n    const rrfConfig = {\n      userProfile: 'users',\n      attachAuthIsReady:true,\n      useFirestoreForProfile: true\n      }\n\nconst store = createStore(RootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reduxFirestore(fbConfig),\n    )\n  );\n\n\n  const rrfProps = {\n      firebase,\n      config: rrfConfig,\n      dispatch: store.dispatch,\n      createFirestoreInstance // <- needed if using firestore\n    }\n\n    function AuthIsLoaded({ children }) {\n      const auth = useSelector(state => state.firebase.auth)\n      if (!isLoaded(auth)) return <div className='container center'>Loading Screen...</div>;\n          return children\n  }\n\nReactDOM.render(\n<Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n    <AuthIsLoaded>\n      <App />\n    </AuthIsLoaded>\n  </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}